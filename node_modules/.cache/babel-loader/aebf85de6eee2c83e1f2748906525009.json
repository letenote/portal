{"ast":null,"code":"var _jsxFileName = \"/Users/rezaaditya/Documents/github/my-app/src/component/RequireAuth.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport AppContext from \"../context/AppContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  LangContext\n} = AppContext;\n\nconst useAuth = () => {\n  _s();\n\n  return React.useContext(LangContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nconst RequireAuth = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  let auth = useAuth();\n  let location = useLocation();\n\n  if (!auth.user) {\n    // Redirect them to the /login page, but save the current location they were\n    // trying to go to when they were redirected. This allows us to send them\n    // along to that page after they login, which is a nicer user experience\n    // than dropping them off on the home page.\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }, this);\n  }\n\n  return children;\n};\n\n_s2(RequireAuth, \"HRLOLLAXFjObMMH3UCaG4AIfmXk=\", false, function () {\n  return [useAuth, useLocation];\n});\n\n_c = RequireAuth;\nexport default _c2 = /*#__PURE__*/React.memo(RequireAuth);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RequireAuth\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","Navigate","useLocation","AppContext","LangContext","useAuth","useContext","RequireAuth","children","auth","location","user","from","memo"],"sources":["/Users/rezaaditya/Documents/github/my-app/src/component/RequireAuth.js"],"sourcesContent":["import React from \"react\";\nimport {Navigate, useLocation} from \"react-router-dom\";\nimport AppContext from \"../context/AppContext\";\nconst { LangContext } = AppContext;\nconst useAuth = () => React.useContext(LangContext);\n\nconst RequireAuth = ({ children }) => {\n\tlet auth = useAuth();\n\tlet location = useLocation();\n\n\tif (!auth.user) {\n\t\t// Redirect them to the /login page, but save the current location they were\n\t\t// trying to go to when they were redirected. This allows us to send them\n\t\t// along to that page after they login, which is a nicer user experience\n\t\t// than dropping them off on the home page.\n\t\treturn <Navigate to=\"/login\" state={{ from: location }} replace />;\n\t}\n\n\treturn children;\n}\n\nexport default React.memo(RequireAuth);"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,kBAApC;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AACA,MAAM;EAAEC;AAAF,IAAkBD,UAAxB;;AACA,MAAME,OAAO,GAAG;EAAA;;EAAA,OAAML,KAAK,CAACM,UAAN,CAAiBF,WAAjB,CAAN;AAAA,CAAhB;;GAAMC,O;;AAEN,MAAME,WAAW,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACrC,IAAIC,IAAI,GAAGJ,OAAO,EAAlB;EACA,IAAIK,QAAQ,GAAGR,WAAW,EAA1B;;EAEA,IAAI,CAACO,IAAI,CAACE,IAAV,EAAgB;IACf;IACA;IACA;IACA;IACA,oBAAO,QAAC,QAAD;MAAU,EAAE,EAAC,QAAb;MAAsB,KAAK,EAAE;QAAEC,IAAI,EAAEF;MAAR,CAA7B;MAAiD,OAAO;IAAxD;MAAA;MAAA;MAAA;IAAA,QAAP;EACA;;EAED,OAAOF,QAAP;AACA,CAbD;;IAAMD,W;UACMF,O,EACIH,W;;;KAFVK,W;AAeN,kCAAeP,KAAK,CAACa,IAAN,CAAWN,WAAX,CAAf"},"metadata":{},"sourceType":"module"}