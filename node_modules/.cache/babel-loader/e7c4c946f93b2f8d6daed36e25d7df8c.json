{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/rezaaditya/Documents/github/portal/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\n\nvar isArray = function isArray(value, details) {\n  if (!Array.isArray(value)) {\n    throw new WorkboxError('not-an-array', details);\n  }\n};\n\nvar hasMethod = function hasMethod(object, expectedMethod, details) {\n  var type = typeof object[expectedMethod];\n\n  if (type !== 'function') {\n    details['expectedMethod'] = expectedMethod;\n    throw new WorkboxError('missing-a-method', details);\n  }\n};\n\nvar isType = function isType(object, expectedType, details) {\n  if (typeof object !== expectedType) {\n    details['expectedType'] = expectedType;\n    throw new WorkboxError('incorrect-type', details);\n  }\n};\n\nvar isInstance = function isInstance(object, // Need the general type to do the check later.\n// eslint-disable-next-line @typescript-eslint/ban-types\nexpectedClass, details) {\n  if (!(object instanceof expectedClass)) {\n    details['expectedClassName'] = expectedClass.name;\n    throw new WorkboxError('incorrect-class', details);\n  }\n};\n\nvar isOneOf = function isOneOf(value, validValues, details) {\n  if (!validValues.includes(value)) {\n    details['validValueDescription'] = \"Valid values are \".concat(JSON.stringify(validValues), \".\");\n    throw new WorkboxError('invalid-value', details);\n  }\n};\n\nvar isArrayOfClass = function isArrayOfClass(value, // Need general type to do check later.\nexpectedClass, // eslint-disable-line\ndetails) {\n  var error = new WorkboxError('not-array-of-class', details);\n\n  if (!Array.isArray(value)) {\n    throw error;\n  }\n\n  var _iterator = _createForOfIteratorHelper(value),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n\n      if (!(item instanceof expectedClass)) {\n        throw error;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n};\n\nvar finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n  hasMethod: hasMethod,\n  isArray: isArray,\n  isInstance: isInstance,\n  isOneOf: isOneOf,\n  isType: isType,\n  isArrayOfClass: isArrayOfClass\n};\nexport { finalAssertExports as assert };","map":null,"metadata":{},"sourceType":"module"}