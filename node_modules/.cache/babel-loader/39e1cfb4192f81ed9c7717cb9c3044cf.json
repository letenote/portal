{"ast":null,"code":"var _jsxFileName = \"/Users/rezaaditya/Documents/github/my-app/src/container/Login.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  console.log(\"Login render\");\n  return (\n    /*#__PURE__*/\n    // <div className=\"background\">\n    // \t<div className=\"div-center\">\n    // \t\t<div className=\"content\">\n    // \t\t\t<h3>Login</h3>\n    // \t\t\t<hr/>\n    //\n    //\n    // \t\t</div>\n    // \t</div>\n    // </div>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Lazy Loading Example\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This example demonstrates how to lazily load both route elements and even entire portions of your route hierarchy on demand. To get the full effect of this demo, be sure to open your Network tab and watch the new bundles load dynamically as you navigate around.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The \\\"About\\\" page is not loaded until you click on the link. When you do, a \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"<React.Suspense fallback>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 8\n        }, this), \" renders while the code is loaded via a dynamic \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"import()\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 27\n        }, this), \" statement. Once the code loads, the fallback is replaced by the actual code for that page.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The \\\"Dashboard\\\" page does the same thing, but takes it even one step further by \", /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"dynamically defining additional routes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), \" once the page loads! Since React Router lets you declare your routes as\", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"<Route>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 6\n        }, this), \" elements, you can easily define more routes by placing an additional \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"<Routes>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 31\n        }, this), \" element anywhere further down the element tree. Just be sure the parent route ends with a\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this), \" like \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"<Route path=\\\"dashboard/*\\\">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 26\n        }, this), \" in this case.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 3\n    }, this)\n  );\n};\n\n_c = Login;\nexport default _c2 = /*#__PURE__*/React.memo(Login, (prevProps, nextProps) => {\n  return JSON.stringify(prevProps) === JSON.stringify(nextProps);\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","Login","console","log","memo","prevProps","nextProps","JSON","stringify"],"sources":["/Users/rezaaditya/Documents/github/my-app/src/container/Login.js"],"sourcesContent":["import React from \"react\";\n\nconst Login = () => {\n\tconsole.log(\"Login render\")\n\treturn(\n\t\t// <div className=\"background\">\n\t\t// \t<div className=\"div-center\">\n\t\t// \t\t<div className=\"content\">\n\t\t// \t\t\t<h3>Login</h3>\n\t\t// \t\t\t<hr/>\n\t\t//\n\t\t//\n\t\t// \t\t</div>\n\t\t// \t</div>\n\t\t// </div>\n\t\t<div>\n\t\t\t\t<h1>Lazy Loading Example</h1>\n\n\t\t\t\t<p>\n\t\t\t\t\tThis example demonstrates how to lazily load both route elements and\n\t\t\t\t\teven entire portions of your route hierarchy on demand. To get the full\n\t\t\t\t\teffect of this demo, be sure to open your Network tab and watch the new\n\t\t\t\t\tbundles load dynamically as you navigate around.\n\t\t\t\t</p>\n\n\t\t\t\t<p>\n\t\t\t\t\tThe \"About\" page is not loaded until you click on the link. When you do,\n\t\t\t\t\ta <code>&lt;React.Suspense fallback&gt;</code> renders while the code is\n\t\t\t\t\tloaded via a dynamic <code>import()</code> statement. Once the code\n\t\t\t\t\tloads, the fallback is replaced by the actual code for that page.\n\t\t\t\t</p>\n\n\t\t\t\t<p>\n\t\t\t\t\tThe \"Dashboard\" page does the same thing, but takes it even one step\n\t\t\t\t\tfurther by <em>dynamically defining additional routes</em> once the page\n\t\t\t\t\tloads! Since React Router lets you declare your routes as\n\t\t\t\t\t<code>&lt;Route&gt;</code> elements, you can easily define more routes\n\t\t\t\t\tby placing an additional <code>&lt;Routes&gt;</code> element anywhere\n\t\t\t\t\tfurther down the element tree. Just be sure the parent route ends with a{\" \"}\n\t\t\t\t\t<code>*</code> like <code>&lt;Route path=\"dashboard/*\"&gt;</code> in\n\t\t\t\t\tthis case.\n\t\t\t\t</p>\n\t\t</div>\n\t)\n}\n\nexport default React.memo(Login, (prevProps, nextProps) => {\n\treturn JSON.stringify(prevProps) === JSON.stringify(nextProps);\n})"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EACnBC,OAAO,CAACC,GAAR,CAAY,cAAZ;EACA;IAAA;IACC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAGE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAUE;QAAA,yGAEG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFH,mEAGsB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHtB;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF,eAiBE;QAAA,8GAEY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFZ,2FAIC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJD,yFAK0B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAL1B,gGAM0E,GAN1E,eAOC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPD,yBAOqB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPrB;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBF;IAAA;MAAA;MAAA;MAAA;IAAA;EAXD;AAwCA,CA1CD;;KAAMF,K;AA4CN,kCAAeD,KAAK,CAACI,IAAN,CAAWH,KAAX,EAAkB,CAACI,SAAD,EAAYC,SAAZ,KAA0B;EAC1D,OAAOC,IAAI,CAACC,SAAL,CAAeH,SAAf,MAA8BE,IAAI,CAACC,SAAL,CAAeF,SAAf,CAArC;AACA,CAFc,CAAf"},"metadata":{},"sourceType":"module"}