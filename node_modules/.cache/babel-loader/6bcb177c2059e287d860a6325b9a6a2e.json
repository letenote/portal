{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nvar _cacheNameDetails = {\n  googleAnalytics: 'googleAnalytics',\n  precache: 'precache-v2',\n  prefix: 'workbox',\n  runtime: 'runtime',\n  suffix: typeof registration !== 'undefined' ? registration.scope : ''\n};\n\nvar _createCacheName = function _createCacheName(cacheName) {\n  return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix].filter(function (value) {\n    return value && value.length > 0;\n  }).join('-');\n};\n\nvar eachCacheNameDetail = function eachCacheNameDetail(fn) {\n  for (var _i = 0, _Object$keys = Object.keys(_cacheNameDetails); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    fn(key);\n  }\n};\n\nexport var cacheNames = {\n  updateDetails: function updateDetails(details) {\n    eachCacheNameDetail(function (key) {\n      if (typeof details[key] === 'string') {\n        _cacheNameDetails[key] = details[key];\n      }\n    });\n  },\n  getGoogleAnalyticsName: function getGoogleAnalyticsName(userCacheName) {\n    return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n  },\n  getPrecacheName: function getPrecacheName(userCacheName) {\n    return userCacheName || _createCacheName(_cacheNameDetails.precache);\n  },\n  getPrefix: function getPrefix() {\n    return _cacheNameDetails.prefix;\n  },\n  getRuntimeName: function getRuntimeName(userCacheName) {\n    return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n  },\n  getSuffix: function getSuffix() {\n    return _cacheNameDetails.suffix;\n  }\n};","map":null,"metadata":{},"sourceType":"module"}