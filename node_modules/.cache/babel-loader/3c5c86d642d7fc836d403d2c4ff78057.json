{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { memo, useContext } from \"react\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport AppContext from \"../context/AppContext\";\nconst {\n  LangContext\n} = AppContext;\n\nconst RequireAuth = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const auth = useContext(LangContext);\n  const location = useLocation();\n  console.log(\"auth\", auth); // if (!auth.user) {\n  // \t// Redirect them to the /login page, but save the current location they were\n  // \t// trying to go to when they were redirected. This allows us to send them\n  // \t// along to that page after they login, which is a nicer user experience\n  // \t// than dropping them off on the home page.\n  // \t// return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  // \treturn <Navigate to=\"/\" state={{ from: location }} replace />;\n  // }\n\n  return children;\n};\n\n_s(RequireAuth, \"V8aaRscMIH/H6XmbMfvLIzRcFn8=\", false, function () {\n  return [useLocation];\n});\n\n_c = RequireAuth;\nexport default _c2 = /*#__PURE__*/memo(RequireAuth);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RequireAuth\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useContext","Navigate","useLocation","AppContext","LangContext","RequireAuth","children","auth","location","console","log"],"sources":["/Users/rezaaditya/Documents/github/portal/src/component/RequireAuth.js"],"sourcesContent":["import React, {memo, useContext} from \"react\";\nimport {Navigate, useLocation} from \"react-router-dom\";\nimport AppContext from \"../context/AppContext\";\n\nconst { LangContext } = AppContext;\nconst RequireAuth = ({ children }) => {\n\tconst auth = useContext(LangContext);\n\tconst location = useLocation();\n\tconsole.log(\"auth\", auth)\n\t// if (!auth.user) {\n\t// \t// Redirect them to the /login page, but save the current location they were\n\t// \t// trying to go to when they were redirected. This allows us to send them\n\t// \t// along to that page after they login, which is a nicer user experience\n\t// \t// than dropping them off on the home page.\n\t// \t// return <Navigate to=\"/login\" state={{ from: location }} replace />;\n\t// \treturn <Navigate to=\"/\" state={{ from: location }} replace />;\n\t// }\n\n\treturn children;\n}\n\nexport default memo(RequireAuth);"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,IAAf,EAAqBC,UAArB,QAAsC,OAAtC;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,kBAApC;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAEA,MAAM;EAAEC;AAAF,IAAkBD,UAAxB;;AACA,MAAME,WAAW,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACrC,MAAMC,IAAI,GAAGP,UAAU,CAACI,WAAD,CAAvB;EACA,MAAMI,QAAQ,GAAGN,WAAW,EAA5B;EACAO,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAApB,EAHqC,CAIrC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,OAAOD,QAAP;AACA,CAdD;;GAAMD,W;UAEYH,W;;;KAFZG,W;AAgBN,kCAAeN,IAAI,CAACM,WAAD,CAAnB"},"metadata":{},"sourceType":"module"}