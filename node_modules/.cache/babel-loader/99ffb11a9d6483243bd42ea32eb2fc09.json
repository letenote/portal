{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/rezaaditya/Documents/github/my-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\n\nfunction _nestedGroup(groupTitle, urls) {\n  if (urls.length === 0) {\n    return;\n  }\n\n  logger.groupCollapsed(groupTitle);\n\n  var _iterator = _createForOfIteratorHelper(urls),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var url = _step.value;\n      logger.log(url);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof workbox-precaching\n */\n\n\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n  var precachedCount = urlsToPrecache.length;\n  var alreadyPrecachedCount = urlsAlreadyPrecached.length;\n\n  if (precachedCount || alreadyPrecachedCount) {\n    var message = \"Precaching \".concat(precachedCount, \" file\").concat(precachedCount === 1 ? '' : 's', \".\");\n\n    if (alreadyPrecachedCount > 0) {\n      message += \" \".concat(alreadyPrecachedCount, \" \") + \"file\".concat(alreadyPrecachedCount === 1 ? ' is' : 's are', \" already cached.\");\n    }\n\n    logger.groupCollapsed(message);\n\n    _nestedGroup(\"View newly precached URLs.\", urlsToPrecache);\n\n    _nestedGroup(\"View previously precached URLs.\", urlsAlreadyPrecached);\n\n    logger.groupEnd();\n  }\n}","map":null,"metadata":{},"sourceType":"module"}