{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/rezaaditya/Documents/github/portal/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} deletedURLs\n *\n * @private\n */\n\nvar logGroup = function logGroup(groupTitle, deletedURLs) {\n  logger.groupCollapsed(groupTitle);\n\n  var _iterator = _createForOfIteratorHelper(deletedURLs),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var url = _step.value;\n      logger.log(url);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  logger.groupEnd();\n};\n/**\n * @param {Array<string>} deletedURLs\n *\n * @private\n * @memberof workbox-precaching\n */\n\n\nexport function printCleanupDetails(deletedURLs) {\n  var deletionCount = deletedURLs.length;\n\n  if (deletionCount > 0) {\n    logger.groupCollapsed(\"During precaching cleanup, \" + \"\".concat(deletionCount, \" cached \") + \"request\".concat(deletionCount === 1 ? ' was' : 's were', \" deleted.\"));\n    logGroup('Deleted Cache Requests', deletedURLs);\n    logger.groupEnd();\n  }\n}","map":null,"metadata":{},"sourceType":"module"}